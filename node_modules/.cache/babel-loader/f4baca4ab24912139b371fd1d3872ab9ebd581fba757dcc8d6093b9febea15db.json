{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gabriel\\\\Desktop\\\\TALVEZ PROJETO FINAL\\\\social-media-app\\\\social-network\\\\src\\\\pages\\\\Posts.js\",\n  _s = $RefreshSig$();\n// src/pages/Posts.js\nimport { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\";\nimport { collection, getDocs, updateDoc, doc } from \"firebase/firestore\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postsCollection = collection(db, \"posts\");\n      const postsSnapshot = await getDocs(postsCollection);\n      const postsList = postsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setPosts(postsList);\n    };\n    fetchPosts();\n  }, []);\n\n  // Função para curtir o post e atualizar as curtidas no Firestore\n  const handleLike = async (postId, currentLikes) => {\n    const postRef = doc(db, \"posts\", postId);\n    try {\n      await updateDoc(postRef, {\n        likes: currentLikes + 1 // Incrementa o número de curtidas\n      });\n    } catch (error) {\n      console.error(\"Erro ao curtir o post: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLike(post.id, post.likes || 0),\n          children: [\"Curtir (\", post.likes || 0, \") \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/comments/${post.id}`,\n        children: \"Comentar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), \" \"]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useState","useEffect","db","collection","getDocs","updateDoc","doc","Link","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","fetchPosts","postsCollection","postsSnapshot","postsList","docs","map","id","data","handleLike","postId","currentLikes","postRef","likes","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","post","title","content","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/Gabriel/Desktop/TALVEZ PROJETO FINAL/social-media-app/social-network/src/pages/Posts.js"],"sourcesContent":["// src/pages/Posts.js\r\nimport { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { collection, getDocs, updateDoc, doc } from \"firebase/firestore\"; \r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      const postsCollection = collection(db, \"posts\");\r\n      const postsSnapshot = await getDocs(postsCollection);\r\n      const postsList = postsSnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setPosts(postsList);\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // Função para curtir o post e atualizar as curtidas no Firestore\r\n  const handleLike = async (postId, currentLikes) => {\r\n    const postRef = doc(db, \"posts\", postId);\r\n\r\n    try {\r\n      await updateDoc(postRef, {\r\n        likes: currentLikes + 1, // Incrementa o número de curtidas\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Erro ao curtir o post: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Posts</h1>\r\n      {posts.map((post) => (\r\n        <div key={post.id}>\r\n          <h3>{post.title}</h3>\r\n          <p>{post.content}</p>\r\n          <div>\r\n            <button onClick={() => handleLike(post.id, post.likes || 0)}>\r\n              Curtir ({post.likes || 0}) {/* Exibe o número de curtidas */}\r\n            </button>\r\n          </div>\r\n          <Link to={`/comments/${post.id}`}>Comentar</Link> {/* Link para a tela de comentários */}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}