{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gabriel\\\\Desktop\\\\TALVEZ PROJETO FINAL\\\\social-media-app\\\\social-network\\\\src\\\\pages\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\";\nimport { collection, getDocs, updateDoc, doc } from \"firebase/firestore\";\nimport { Link } from \"react-router-dom\";\nimport styles from './Posts.module.css'; // Importando o CSS modular\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postsCollection = collection(db, \"posts\");\n      const postsSnapshot = await getDocs(postsCollection);\n      const postsList = postsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setPosts(postsList);\n    };\n    fetchPosts();\n  }, []);\n\n  // Função para curtir o post e atualizar as curtidas no Firestore\n  const handleLike = async (postId, currentLikes) => {\n    const postRef = doc(db, \"posts\", postId);\n    try {\n      await updateDoc(postRef, {\n        likes: currentLikes + 1 // Incrementa o número de curtidas\n      });\n    } catch (error) {\n      console.error(\"Erro ao curtir o post: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.postItem,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.postTitle,\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.postContent,\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.likeButton,\n          onClick: () => handleLike(post.id, post.likes || 0),\n          children: [\"Curtir (\", post.likes || 0, \") \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/comments/${post.id}`,\n        className: styles.commentLink,\n        children: \"Coment\\xE1rios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), \" \"]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useState","useEffect","db","collection","getDocs","updateDoc","doc","Link","styles","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","fetchPosts","postsCollection","postsSnapshot","postsList","docs","map","id","data","handleLike","postId","currentLikes","postRef","likes","error","console","className","container","children","post","postItem","postTitle","title","fileName","_jsxFileName","lineNumber","columnNumber","postContent","content","likeButton","onClick","to","commentLink","_c","$RefreshReg$"],"sources":["C:/Users/Gabriel/Desktop/TALVEZ PROJETO FINAL/social-media-app/social-network/src/pages/Posts.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { collection, getDocs, updateDoc, doc } from \"firebase/firestore\"; \r\nimport { Link } from \"react-router-dom\";\r\nimport styles from './Posts.module.css';  // Importando o CSS modular\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      const postsCollection = collection(db, \"posts\");\r\n      const postsSnapshot = await getDocs(postsCollection);\r\n      const postsList = postsSnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setPosts(postsList);\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // Função para curtir o post e atualizar as curtidas no Firestore\r\n  const handleLike = async (postId, currentLikes) => {\r\n    const postRef = doc(db, \"posts\", postId);\r\n\r\n    try {\r\n      await updateDoc(postRef, {\r\n        likes: currentLikes + 1, // Incrementa o número de curtidas\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Erro ao curtir o post: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {posts.map((post) => (\r\n        <div key={post.id} className={styles.postItem}>\r\n          <h3 className={styles.postTitle}>{post.title}</h3>\r\n          <p className={styles.postContent}>{post.content}</p>\r\n          <div>\r\n            <button\r\n              className={styles.likeButton}\r\n              onClick={() => handleLike(post.id, post.likes || 0)}\r\n            >\r\n              Curtir ({post.likes || 0}) {/* Exibe o número de curtidas */}\r\n            </button>\r\n          </div>\r\n          <Link to={`/comments/${post.id}`} className={styles.commentLink}>\r\n            Comentários\r\n          </Link> {/* Link para a tela de comentários */}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}